---
title: "Exponential Growth COVID 19 in Switzerland"
author: "Andre Meichtry"
output:
  html_document:
    number_sections: yes 
    #self_contained: yes
    #toc: yes
    #toc_depth: 3
    #toc_float:
    #  collapsed: no
date: "2020-10-23"
---





*The greatest shortcoming of the human race is the inability to
  understand the exponential function. (Al Bartlett)*

# Problem

Sie sitzen zuoberst in einem Fussball-Stadion; es hat Platz für
$6\times 10^{13}$ Wassertropfen. Es beginnt mit einem Tropfen, der in
der ersten Minute ins Stadion tröpfelt. Jede Minute *verdoppelt* sich
die Anzahl Tropfen. Lange passiert nichts Besonderes. Sie sehen die
Gefahr nicht kommen. Von der *Hälfte* bis *ganz*
oben geht es plötzlich sehr schnell. Es würde auch nicht viel
bringen, wenn das Stadion noch viel grösser wäre; wir haben
**exponentielles Wachstum**.




```r
max <- 3e06*20e06 ##Volumen Allianz-Arena
halb <- max/2
max2<-max*2
tmax<-50
t<-seq(0,tmax,by=0.1)
expwachs <- function(t) {y<-1*2^(t/1)}
plot(t,expwachs(t),type="l",ylim=c(0,max2),main="",ylab="Volumen [Wassertropfen]", xlab="Minuten")
axis(side = 1, at = seq(0,tmax,by=1))
abline(h=max,lty=2,col="red")
abline(v=t[458],lty=2,col="red")
abline(h=halb,lty=2,col="blue")
abline(v=t[448],lty=2,col="blue")
```

<img src="figure/unnamed-chunk-1-1.png" title="plot of chunk unnamed-chunk-1" alt="plot of chunk unnamed-chunk-1" width="50%" />




# Exponentialfunktion

**Jede Exponentialfunktion $a^x$ mit $a>1$ wächst ab einem gewissen
$x$ schneller als jede lineare Funktion $a+bx$**.


```r
curve(10*x,from=0,to=60,ylab="y")
curve(20*x,add=TRUE,lty=2)
curve(2^x,add=TRUE,lty=3)
curve(1.2^x,add=TRUE,lty=4)
```

<img src="figure/unnamed-chunk-2-1.png" title="plot of chunk unnamed-chunk-2" alt="plot of chunk unnamed-chunk-2" width="50%" />

# Exponentielles Wachstum


**Exponential growth** is defined by

$$\boxed{x(t)=x_0e^{kt}=x_0e^{t/\tau}=x_02^{t/T}},$$

with $t$: time, $\tau$: $e$-folding time, $T$: doubling time, $k$: growth constant. ^[Proof: $$x(t)=x_0e^{kt}=x_0e^{t/\tau}=x_0 2^{\frac{t}{\tau}\log_2e}=x_02^{\frac{t}{\tau} \frac{1}{\log 2 }}=x_02^{t/T}$$]
  
  


# Daten Covid-19

<https://github.com/openZH/covid_19>


```r
data<-read.csv("https://raw.githubusercontent.com/openZH/covid_19/master/COVID19_Fallzahlen_CH_total.csv")
names(data)[3]<-"Kanton"
data<-data[,-11]
sKcases<-split(data$ncumul_conf,data$Kanton)
sKfatal<-split(data$ncumul_deceased,data$Kanton)
sKhosp<-split(data$ncumul_hosp,data$Kanton)
sKICU<-split(data$ncumul_ICU,data$Kanton)
sKvent<-split(data$ncumul_vent,data$Kanton)
```

## Reported cases

```r
CasesKanton<-sapply(sKcases,function(x){x[max(which(!is.na(x)))]})
CasesKanton
```

```
   AG    AI    AR    BE    BL    BS    FL    FR    GE    GL    GR    JU    LU    NE    NW    OW    SG    SH    SO    SZ    TG    TI    UR 
 4728   197   430  7505  1844  1878   324  5058 12790   329  1694  1038  2854  2561   319   275  4421   395  1496  2066  1620  5327   282 
   VD    VS    ZG    ZH 
16182  6788  1212 14831 
```

```r
sum(CasesKanton)
```

```
[1] 98444
```

## Deceased

```r
FatKanton<-sapply(sKfatal,function(x){x[max(which(!is.na(x)))]})
FatKanton
```

```
 AG  AI  AR  BE  BL  BS  FL  FR  GE  GL  GR  JU  LU  NE  NW  OW  SG  SH  SO  SZ  TG  TI  UR  VD  VS  ZG  ZH 
 59   0   4 107  38  54   1 110 322  14  50   9  25  95   4   5  45   8  18  41  21 353   7 325 176  10 157 
```

```r
sum(FatKanton,na.rm=TRUE)
```

```
[1] 2058
```


## Exponentielles Wachstum Covid-19

+ Bei Verdoppelung alle 2 Tage: $2^{t/2}=(2^{1/2})^t=1.41^t$

+ Bei Verdoppelung alle 3 Tage: $2^{t/3}=(2^{1/3})^t=1.26^t$

+ Bei Verdoppelung alle 7 Tage: $2^{t/7}=(2^{1/7})^t=1.1^t$

+ Bei Verdoppelung alle 10 Tage: $2^{t/10}=(2^{1/10})^t=1.07^t$




```r
data<-read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",check.names=FALSE)
sw<-data[data$"Country/Region"=="Switzerland",-c(1,2,3,4)]
cases<-as.numeric(sw[-c(1:42)])
```


```r
swisspop<-8e6
time<-seq(1,400,by=1)
tag<-1:length(cases)
##################################################
T1<-1
T2<-2
T3<-3
T7<-7
x0<-100
Y1<-x0*2^(time/T1)
Y2<-x0*2^(time/T2)
Y3<-x0*2^(time/T3)
Y7<-x0*2^(time/T7)
time<-time+1

plot(time,Y1,type="l",ylab="cases",ylim=c(100,10000),xlab="days",las=1)
lines(time,Y3,col="red",lty=2)
lines(time,Y2,lty=2)
lines(time,Y7,lty=3)
## abline(h=swisspop,lty=5,col="red") 
points(tag,cases,type="l",col="red")

plot(time,Y1,log="y",type="l",ylab="cases",xlab="days",axes=FALSE,ylim=c(100,40000))
at.y <- outer(1:9, 10^(2:9))
lab.y <- ifelse(log10(at.y) %% 1 == 0, at.y, NA)
axis(2, at=at.y, labels=lab.y, las=2)
axis(1,time)
lines(time,Y2,lty=2)
lines(time,Y7,lty=3)
lines(time,Y3,col="red",lty=2)
abline(h=swisspop,col="red",lty=3)
points(tag,cases,type="l",col="red")
```

<img src="figure/unnamed-chunk-7-1.png" title="plot of chunk unnamed-chunk-7" alt="plot of chunk unnamed-chunk-7" width="50%" /><img src="figure/unnamed-chunk-7-2.png" title="plot of chunk unnamed-chunk-7" alt="plot of chunk unnamed-chunk-7" width="50%" />

 **Example of doubling times: 1 day (solid), 2
      days (dashed), 3 days (red), seven days (dotted), with reported cases Covid19
      in
      Switzerland. Horizontal line: swiss population. On a logarithmic
      scale, a straight line indicates exponential growth.
[Quelle](https://www.arcgis.com/apps/opsdashboard/index.html\#/bda7594740fd40299423467b48e9ecf6)**.

# Auswirkung Vorfaktor


Annahme: Verdoppelung alle drei Tage, 10 Prozent der Infizierten müssen ins Spital. Die Anzahl Cases von heute sind die
Anzahl Spitalpatienten in 9 Tagen, **wenn mann nichts macht**.

$0.1\times 2^{0.33t}=0.1\times (2^{0.33})^t=0.1\times
1.3^t=1.3^{\log_{1.3}0.1}1.3^t=1.3^{t+\log_{1.3}0.1}=1.3^{t-8.776}$


Analog kann man zeigen: Wenn die Mortalitätsrate bei einem Prozent der
bestätigten Fälle liegt, dann ist die Anzahl der bestätigten Fälle
die zu erwartende Anzahl der Todesfälle ca. 18 Tage später, **wenn man
nichts macht**. 

$0.01\times 2^{0.33t}=0.01\times (2^{0.33})^t=0.01\times
1.3^t=1.3^{\log_{1.3}0.01}1.3^t=1.3^{t+\log_{1.3}0.01}=1.3^{t-17.552}$



```r
delay<-log(0.1)/log(1.3)
delay
```

```
[1] -8.7763
```

```r
delay2<-log(0.01)/log(1.3)
delay2
```

```
[1] -17.553
```

```r
plot(time,2^(0.33*time),ylab="cases",xlab="days",type="l",ylim=c(0,10000))
lines(time,0.1*2^(time/3),lty=2)
lines(time,0.01*2^(time/3),lty=3)
```

<img src="figure/unnamed-chunk-8-1.png" title="plot of chunk unnamed-chunk-8" alt="plot of chunk unnamed-chunk-8" width="50%" />
 
